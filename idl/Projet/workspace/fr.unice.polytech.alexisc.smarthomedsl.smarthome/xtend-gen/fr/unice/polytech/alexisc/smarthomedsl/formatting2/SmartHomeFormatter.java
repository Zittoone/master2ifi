/**
 * generated by Xtext 2.12.0
 */
package fr.unice.polytech.alexisc.smarthomedsl.formatting2;

import com.google.inject.Inject;
import fr.unice.polytech.alexisc.smarthomedsl.model.model.Home;
import fr.unice.polytech.alexisc.smarthomedsl.model.model.Pattern;
import fr.unice.polytech.alexisc.smarthomedsl.model.model.Room;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class SmartHomeFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private /* SmartHomeGrammarAccess */Object _smartHomeGrammarAccess;
  
  protected void _format(final Home home, @Extension final IFormattableDocument document) {
    EList<Room> _rooms = home.getRooms();
    for (final Room room : _rooms) {
      document.<Room>format(room);
    }
    EList<Pattern> _activities = home.getActivities();
    for (final Pattern activity : _activities) {
      document.<Pattern>format(activity);
    }
  }
  
  public void format(final Object home, final IFormattableDocument document) {
    if (home instanceof XtextResource) {
      _format((XtextResource)home, document);
      return;
    } else if (home instanceof Home) {
      _format((Home)home, document);
      return;
    } else if (home instanceof EObject) {
      _format((EObject)home, document);
      return;
    } else if (home == null) {
      _format((Void)null, document);
      return;
    } else if (home != null) {
      _format(home, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(home, document).toString());
    }
  }
}
