/*
 * generated by Xtext 2.12.0
 */
grammar InternalSmartHome;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.unice.polytech.alexisc.smarthomedsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.unice.polytech.alexisc.smarthomedsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.unice.polytech.alexisc.smarthomedsl.services.SmartHomeGrammarAccess;

}
@parser::members {
	private SmartHomeGrammarAccess grammarAccess;

	public void setGrammarAccess(SmartHomeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleHome
entryRuleHome
:
{ before(grammarAccess.getHomeRule()); }
	 ruleHome
{ after(grammarAccess.getHomeRule()); } 
	 EOF 
;

// Rule Home
ruleHome 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHomeAccess().getGroup()); }
		(rule__Home__Group__0)
		{ after(grammarAccess.getHomeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoom
entryRuleRoom
:
{ before(grammarAccess.getRoomRule()); }
	 ruleRoom
{ after(grammarAccess.getRoomRule()); } 
	 EOF 
;

// Rule Room
ruleRoom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRoomAccess().getGroup()); }
		(rule__Room__Group__0)
		{ after(grammarAccess.getRoomAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnalogSensor
entryRuleAnalogSensor
:
{ before(grammarAccess.getAnalogSensorRule()); }
	 ruleAnalogSensor
{ after(grammarAccess.getAnalogSensorRule()); } 
	 EOF 
;

// Rule AnalogSensor
ruleAnalogSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnalogSensorAccess().getGroup()); }
		(rule__AnalogSensor__Group__0)
		{ after(grammarAccess.getAnalogSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDigitalSensor
entryRuleDigitalSensor
:
{ before(grammarAccess.getDigitalSensorRule()); }
	 ruleDigitalSensor
{ after(grammarAccess.getDigitalSensorRule()); } 
	 EOF 
;

// Rule DigitalSensor
ruleDigitalSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDigitalSensorAccess().getGroup()); }
		(rule__DigitalSensor__Group__0)
		{ after(grammarAccess.getDigitalSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensorCSV
entryRuleSensorCSV
:
{ before(grammarAccess.getSensorCSVRule()); }
	 ruleSensorCSV
{ after(grammarAccess.getSensorCSVRule()); } 
	 EOF 
;

// Rule SensorCSV
ruleSensorCSV 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorCSVAccess().getGroup()); }
		(rule__SensorCSV__Group__0)
		{ after(grammarAccess.getSensorCSVAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePattern
entryRulePattern
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAccess().getGroup()); }
		(rule__Pattern__Group__0)
		{ after(grammarAccess.getPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDuration
entryRuleDuration
:
{ before(grammarAccess.getDurationRule()); }
	 ruleDuration
{ after(grammarAccess.getDurationRule()); } 
	 EOF 
;

// Rule Duration
ruleDuration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDurationAccess().getGroup()); }
		(rule__Duration__Group__0)
		{ after(grammarAccess.getDurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Operator
ruleOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Precision
rulePrecision
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrecisionAccess().getAlternatives()); }
		(rule__Precision__Alternatives)
		{ after(grammarAccess.getPrecisionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Activity
ruleActivity
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActivityAccess().getAlternatives()); }
		(rule__Activity__Alternatives)
		{ after(grammarAccess.getActivityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__SensorsAlternatives_4_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getSensorsAnalogSensorParserRuleCall_4_2_0_0()); }
		ruleAnalogSensor
		{ after(grammarAccess.getRoomAccess().getSensorsAnalogSensorParserRuleCall_4_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRoomAccess().getSensorsDigitalSensorParserRuleCall_4_2_0_1()); }
		ruleDigitalSensor
		{ after(grammarAccess.getRoomAccess().getSensorsDigitalSensorParserRuleCall_4_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRoomAccess().getSensorsSensorCSVParserRuleCall_4_2_0_2()); }
		ruleSensorCSV
		{ after(grammarAccess.getRoomAccess().getSensorsSensorCSVParserRuleCall_4_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__SensorsAlternatives_4_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getSensorsAnalogSensorParserRuleCall_4_3_1_0_0()); }
		ruleAnalogSensor
		{ after(grammarAccess.getRoomAccess().getSensorsAnalogSensorParserRuleCall_4_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRoomAccess().getSensorsDigitalSensorParserRuleCall_4_3_1_0_1()); }
		ruleDigitalSensor
		{ after(grammarAccess.getRoomAccess().getSensorsDigitalSensorParserRuleCall_4_3_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRoomAccess().getSensorsSensorCSVParserRuleCall_4_3_1_0_2()); }
		ruleSensorCSV
		{ after(grammarAccess.getRoomAccess().getSensorsSensorCSVParserRuleCall_4_3_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getEqualEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getOperatorAccess().getEqualEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getInferiorEnumLiteralDeclaration_1()); }
		('<')
		{ after(grammarAccess.getOperatorAccess().getInferiorEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getSuperiorEnumLiteralDeclaration_2()); }
		('>')
		{ after(grammarAccess.getOperatorAccess().getSuperiorEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precision__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrecisionAccess().getSEnumLiteralDeclaration_0()); }
		('seconds')
		{ after(grammarAccess.getPrecisionAccess().getSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrecisionAccess().getMsEnumLiteralDeclaration_1()); }
		('milliseconds')
		{ after(grammarAccess.getPrecisionAccess().getMsEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrecisionAccess().getMEnumLiteralDeclaration_2()); }
		('minutes')
		{ after(grammarAccess.getPrecisionAccess().getMEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActivityAccess().getLayingEnumLiteralDeclaration_0()); }
		('laying')
		{ after(grammarAccess.getActivityAccess().getLayingEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getActivityAccess().getSittingEnumLiteralDeclaration_1()); }
		('sitting')
		{ after(grammarAccess.getActivityAccess().getSittingEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getActivityAccess().getStandingEnumLiteralDeclaration_2()); }
		('standing')
		{ after(grammarAccess.getActivityAccess().getStandingEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group__0__Impl
	rule__Home__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getHomeAction_0()); }
	()
	{ after(grammarAccess.getHomeAccess().getHomeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group__1__Impl
	rule__Home__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getGroup_1()); }
	(rule__Home__Group_1__0)?
	{ after(grammarAccess.getHomeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getGroup_2()); }
	(rule__Home__Group_2__0)?
	{ after(grammarAccess.getHomeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Home__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_1__0__Impl
	rule__Home__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getRoomsKeyword_1_0()); }
	'rooms'
	{ after(grammarAccess.getHomeAccess().getRoomsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_1__1__Impl
	rule__Home__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getHomeAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_1__2__Impl
	rule__Home__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getRoomsAssignment_1_2()); }
	(rule__Home__RoomsAssignment_1_2)
	{ after(grammarAccess.getHomeAccess().getRoomsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_1__3__Impl
	rule__Home__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getGroup_1_3()); }
	(rule__Home__Group_1_3__0)*
	{ after(grammarAccess.getHomeAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getRightCurlyBracketKeyword_1_4()); }
	'}'
	{ after(grammarAccess.getHomeAccess().getRightCurlyBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Home__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_1_3__0__Impl
	rule__Home__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getCommaKeyword_1_3_0()); }
	','
	{ after(grammarAccess.getHomeAccess().getCommaKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getRoomsAssignment_1_3_1()); }
	(rule__Home__RoomsAssignment_1_3_1)
	{ after(grammarAccess.getHomeAccess().getRoomsAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Home__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_2__0__Impl
	rule__Home__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getPatternsKeyword_2_0()); }
	'patterns'
	{ after(grammarAccess.getHomeAccess().getPatternsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_2__1__Impl
	rule__Home__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getHomeAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_2__2__Impl
	rule__Home__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getActivitiesAssignment_2_2()); }
	(rule__Home__ActivitiesAssignment_2_2)
	{ after(grammarAccess.getHomeAccess().getActivitiesAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_2__3__Impl
	rule__Home__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getGroup_2_3()); }
	(rule__Home__Group_2_3__0)*
	{ after(grammarAccess.getHomeAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getRightCurlyBracketKeyword_2_4()); }
	'}'
	{ after(grammarAccess.getHomeAccess().getRightCurlyBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Home__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_2_3__0__Impl
	rule__Home__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getHomeAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Home__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHomeAccess().getActivitiesAssignment_2_3_1()); }
	(rule__Home__ActivitiesAssignment_2_3_1)
	{ after(grammarAccess.getHomeAccess().getActivitiesAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Room__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__0__Impl
	rule__Room__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRoomAction_0()); }
	()
	{ after(grammarAccess.getRoomAccess().getRoomAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__1__Impl
	rule__Room__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRoomKeyword_1()); }
	'Room'
	{ after(grammarAccess.getRoomAccess().getRoomKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__2__Impl
	rule__Room__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getNameAssignment_2()); }
	(rule__Room__NameAssignment_2)
	{ after(grammarAccess.getRoomAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__3__Impl
	rule__Room__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getRoomAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__4__Impl
	rule__Room__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getGroup_4()); }
	(rule__Room__Group_4__0)?
	{ after(grammarAccess.getRoomAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getRoomAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Room__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_4__0__Impl
	rule__Room__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getSensorsKeyword_4_0()); }
	'sensors'
	{ after(grammarAccess.getRoomAccess().getSensorsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_4__1__Impl
	rule__Room__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getRoomAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_4__2__Impl
	rule__Room__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getSensorsAssignment_4_2()); }
	(rule__Room__SensorsAssignment_4_2)
	{ after(grammarAccess.getRoomAccess().getSensorsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_4__3__Impl
	rule__Room__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getGroup_4_3()); }
	(rule__Room__Group_4_3__0)*
	{ after(grammarAccess.getRoomAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getRoomAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Room__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_4_3__0__Impl
	rule__Room__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getRoomAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Room__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRoomAccess().getSensorsAssignment_4_3_1()); }
	(rule__Room__SensorsAssignment_4_3_1)
	{ after(grammarAccess.getRoomAccess().getSensorsAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnalogSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__0__Impl
	rule__AnalogSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getAnalogSensorAction_0()); }
	()
	{ after(grammarAccess.getAnalogSensorAccess().getAnalogSensorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__1__Impl
	rule__AnalogSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getAnalogSensorKeyword_1()); }
	'AnalogSensor'
	{ after(grammarAccess.getAnalogSensorAccess().getAnalogSensorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__2__Impl
	rule__AnalogSensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getNameAssignment_2()); }
	(rule__AnalogSensor__NameAssignment_2)
	{ after(grammarAccess.getAnalogSensorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__3__Impl
	rule__AnalogSensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getOnKeyword_3()); }
	'on'
	{ after(grammarAccess.getAnalogSensorAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__4__Impl
	rule__AnalogSensor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getLocationAssignment_4()); }
	(rule__AnalogSensor__LocationAssignment_4)
	{ after(grammarAccess.getAnalogSensorAccess().getLocationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__5__Impl
	rule__AnalogSensor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getReactsKeyword_5()); }
	'reacts'
	{ after(grammarAccess.getAnalogSensorAccess().getReactsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__6__Impl
	rule__AnalogSensor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getToKeyword_6()); }
	'to'
	{ after(grammarAccess.getAnalogSensorAccess().getToKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnalogSensor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnalogSensorAccess().getTypeAssignment_7()); }
	(rule__AnalogSensor__TypeAssignment_7)
	{ after(grammarAccess.getAnalogSensorAccess().getTypeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitalSensor__Group__0__Impl
	rule__DigitalSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitalSensorAccess().getDigitalSensorAction_0()); }
	()
	{ after(grammarAccess.getDigitalSensorAccess().getDigitalSensorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitalSensor__Group__1__Impl
	rule__DigitalSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitalSensorAccess().getDigitalSensorKeyword_1()); }
	'DigitalSensor'
	{ after(grammarAccess.getDigitalSensorAccess().getDigitalSensorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitalSensor__Group__2__Impl
	rule__DigitalSensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitalSensorAccess().getNameAssignment_2()); }
	(rule__DigitalSensor__NameAssignment_2)
	{ after(grammarAccess.getDigitalSensorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitalSensor__Group__3__Impl
	rule__DigitalSensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitalSensorAccess().getOnKeyword_3()); }
	'on'
	{ after(grammarAccess.getDigitalSensorAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitalSensor__Group__4__Impl
	rule__DigitalSensor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitalSensorAccess().getLocationAssignment_4()); }
	(rule__DigitalSensor__LocationAssignment_4)
	{ after(grammarAccess.getDigitalSensorAccess().getLocationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitalSensor__Group__5__Impl
	rule__DigitalSensor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitalSensorAccess().getReactsKeyword_5()); }
	'reacts'
	{ after(grammarAccess.getDigitalSensorAccess().getReactsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitalSensor__Group__6__Impl
	rule__DigitalSensor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitalSensorAccess().getToKeyword_6()); }
	'to'
	{ after(grammarAccess.getDigitalSensorAccess().getToKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DigitalSensor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDigitalSensorAccess().getTypeAssignment_7()); }
	(rule__DigitalSensor__TypeAssignment_7)
	{ after(grammarAccess.getDigitalSensorAccess().getTypeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorCSV__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorCSV__Group__0__Impl
	rule__SensorCSV__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorCSVAccess().getSensorCSVAction_0()); }
	()
	{ after(grammarAccess.getSensorCSVAccess().getSensorCSVAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorCSV__Group__1__Impl
	rule__SensorCSV__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorCSVAccess().getSensorCSVKeyword_1()); }
	'SensorCSV'
	{ after(grammarAccess.getSensorCSVAccess().getSensorCSVKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorCSV__Group__2__Impl
	rule__SensorCSV__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorCSVAccess().getNameAssignment_2()); }
	(rule__SensorCSV__NameAssignment_2)
	{ after(grammarAccess.getSensorCSVAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorCSV__Group__3__Impl
	rule__SensorCSV__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorCSVAccess().getFromKeyword_3()); }
	'from'
	{ after(grammarAccess.getSensorCSVAccess().getFromKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorCSV__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorCSVAccess().getFileAssignment_4()); }
	(rule__SensorCSV__FileAssignment_4)
	{ after(grammarAccess.getSensorCSVAccess().getFileAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__0__Impl
	rule__Pattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getPatternAction_0()); }
	()
	{ after(grammarAccess.getPatternAccess().getPatternAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__1__Impl
	rule__Pattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getActivityKeyword_1()); }
	'Activity'
	{ after(grammarAccess.getPatternAccess().getActivityKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__2__Impl
	rule__Pattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getNameAssignment_2()); }
	(rule__Pattern__NameAssignment_2)
	{ after(grammarAccess.getPatternAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__3__Impl
	rule__Pattern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__4__Impl
	rule__Pattern__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getGroup_4()); }
	(rule__Pattern__Group_4__0)?
	{ after(grammarAccess.getPatternAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__0__Impl
	rule__Pattern__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRulesKeyword_4_0()); }
	'rules'
	{ after(grammarAccess.getPatternAccess().getRulesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__1__Impl
	rule__Pattern__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__2__Impl
	rule__Pattern__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRulesAssignment_4_2()); }
	(rule__Pattern__RulesAssignment_4_2)
	{ after(grammarAccess.getPatternAccess().getRulesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__3__Impl
	rule__Pattern__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getGroup_4_3()); }
	(rule__Pattern__Group_4_3__0)*
	{ after(grammarAccess.getPatternAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4_3__0__Impl
	rule__Pattern__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getAndKeyword_4_3_0()); }
	'and'
	{ after(grammarAccess.getPatternAccess().getAndKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRulesAssignment_4_3_1()); }
	(rule__Pattern__RulesAssignment_4_3_1)
	{ after(grammarAccess.getPatternAccess().getRulesAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleAction_0()); }
	()
	{ after(grammarAccess.getRuleAccess().getRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getPredicateAssignment_1()); }
	(rule__Rule__PredicateAssignment_1)
	{ after(grammarAccess.getRuleAccess().getPredicateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_2()); }
	(rule__Rule__Group_2__0)?
	{ after(grammarAccess.getRuleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_2__0__Impl
	rule__Rule__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getForKeyword_2_0()); }
	'for'
	{ after(grammarAccess.getRuleAccess().getForKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getDurationAssignment_2_1()); }
	(rule__Rule__DurationAssignment_2_1)
	{ after(grammarAccess.getRuleAccess().getDurationAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Duration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__0__Impl
	rule__Duration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getDurationAction_0()); }
	()
	{ after(grammarAccess.getDurationAccess().getDurationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__1__Impl
	rule__Duration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getDurationAssignment_1()); }
	(rule__Duration__DurationAssignment_1)
	{ after(grammarAccess.getDurationAccess().getDurationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Duration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDurationAccess().getPrecisionAssignment_2()); }
	(rule__Duration__PrecisionAssignment_2)
	{ after(grammarAccess.getDurationAccess().getPrecisionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Home__RoomsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHomeAccess().getRoomsRoomParserRuleCall_1_2_0()); }
		ruleRoom
		{ after(grammarAccess.getHomeAccess().getRoomsRoomParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__RoomsAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHomeAccess().getRoomsRoomParserRuleCall_1_3_1_0()); }
		ruleRoom
		{ after(grammarAccess.getHomeAccess().getRoomsRoomParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__ActivitiesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHomeAccess().getActivitiesPatternParserRuleCall_2_2_0()); }
		rulePattern
		{ after(grammarAccess.getHomeAccess().getActivitiesPatternParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Home__ActivitiesAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHomeAccess().getActivitiesPatternParserRuleCall_2_3_1_0()); }
		rulePattern
		{ after(grammarAccess.getHomeAccess().getActivitiesPatternParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getRoomAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__SensorsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getSensorsAlternatives_4_2_0()); }
		(rule__Room__SensorsAlternatives_4_2_0)
		{ after(grammarAccess.getRoomAccess().getSensorsAlternatives_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Room__SensorsAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRoomAccess().getSensorsAlternatives_4_3_1_0()); }
		(rule__Room__SensorsAlternatives_4_3_1_0)
		{ after(grammarAccess.getRoomAccess().getSensorsAlternatives_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnalogSensorAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getAnalogSensorAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__LocationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnalogSensorAccess().getLocationEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getAnalogSensorAccess().getLocationEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalogSensor__TypeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnalogSensorAccess().getTypeEStringParserRuleCall_7_0()); }
		ruleEString
		{ after(grammarAccess.getAnalogSensorAccess().getTypeEStringParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDigitalSensorAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getDigitalSensorAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__LocationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDigitalSensorAccess().getLocationEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getDigitalSensorAccess().getLocationEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensor__TypeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDigitalSensorAccess().getTypeEStringParserRuleCall_7_0()); }
		ruleEString
		{ after(grammarAccess.getDigitalSensorAccess().getTypeEStringParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorCSVAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getSensorCSVAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorCSV__FileAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorCSVAccess().getFileEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getSensorCSVAccess().getFileEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getPatternAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__RulesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getRulesRuleParserRuleCall_4_2_0()); }
		ruleRule
		{ after(grammarAccess.getPatternAccess().getRulesRuleParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__RulesAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getRulesRuleParserRuleCall_4_3_1_0()); }
		ruleRule
		{ after(grammarAccess.getPatternAccess().getRulesRuleParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__PredicateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getPredicatePredicateCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRuleAccess().getPredicatePredicateEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getRuleAccess().getPredicatePredicateEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRuleAccess().getPredicatePredicateCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__DurationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getDurationDurationParserRuleCall_2_1_0()); }
		ruleDuration
		{ after(grammarAccess.getRuleAccess().getDurationDurationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__DurationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getDurationINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDurationAccess().getDurationINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Duration__PrecisionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationAccess().getPrecisionPrecisionEnumRuleCall_2_0()); }
		rulePrecision
		{ after(grammarAccess.getDurationAccess().getPrecisionPrecisionEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
