/*
 * generated by Xtext 2.12.0
 */
package fr.unice.polytech.alexisc.smarthomedsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import fr.unice.polytech.alexisc.smarthomedsl.ide.contentassist.antlr.internal.InternalSmartHomeParser;
import fr.unice.polytech.alexisc.smarthomedsl.services.SmartHomeGrammarAccess;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class SmartHomeParser extends AbstractContentAssistParser {

	@Inject
	private SmartHomeGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalSmartHomeParser createParser() {
		InternalSmartHomeParser result = new InternalSmartHomeParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRoomAccess().getSensorsAlternatives_4_2_0(), "rule__Room__SensorsAlternatives_4_2_0");
					put(grammarAccess.getRoomAccess().getSensorsAlternatives_4_3_1_0(), "rule__Room__SensorsAlternatives_4_3_1_0");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getOperatorAccess().getAlternatives(), "rule__Operator__Alternatives");
					put(grammarAccess.getPrecisionAccess().getAlternatives(), "rule__Precision__Alternatives");
					put(grammarAccess.getActivityAccess().getAlternatives(), "rule__Activity__Alternatives");
					put(grammarAccess.getHomeAccess().getGroup(), "rule__Home__Group__0");
					put(grammarAccess.getHomeAccess().getGroup_1(), "rule__Home__Group_1__0");
					put(grammarAccess.getHomeAccess().getGroup_1_3(), "rule__Home__Group_1_3__0");
					put(grammarAccess.getHomeAccess().getGroup_2(), "rule__Home__Group_2__0");
					put(grammarAccess.getHomeAccess().getGroup_2_3(), "rule__Home__Group_2_3__0");
					put(grammarAccess.getRoomAccess().getGroup(), "rule__Room__Group__0");
					put(grammarAccess.getRoomAccess().getGroup_4(), "rule__Room__Group_4__0");
					put(grammarAccess.getRoomAccess().getGroup_4_3(), "rule__Room__Group_4_3__0");
					put(grammarAccess.getAnalogSensorAccess().getGroup(), "rule__AnalogSensor__Group__0");
					put(grammarAccess.getDigitalSensorAccess().getGroup(), "rule__DigitalSensor__Group__0");
					put(grammarAccess.getSensorCSVAccess().getGroup(), "rule__SensorCSV__Group__0");
					put(grammarAccess.getPatternAccess().getGroup(), "rule__Pattern__Group__0");
					put(grammarAccess.getPatternAccess().getGroup_4(), "rule__Pattern__Group_4__0");
					put(grammarAccess.getPatternAccess().getGroup_4_3(), "rule__Pattern__Group_4_3__0");
					put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
					put(grammarAccess.getRuleAccess().getGroup_2(), "rule__Rule__Group_2__0");
					put(grammarAccess.getSensorPredicateAccess().getGroup(), "rule__SensorPredicate__Group__0");
					put(grammarAccess.getPersonPredicateAccess().getGroup(), "rule__PersonPredicate__Group__0");
					put(grammarAccess.getDurationAccess().getGroup(), "rule__Duration__Group__0");
					put(grammarAccess.getHomeAccess().getRoomsAssignment_1_2(), "rule__Home__RoomsAssignment_1_2");
					put(grammarAccess.getHomeAccess().getRoomsAssignment_1_3_1(), "rule__Home__RoomsAssignment_1_3_1");
					put(grammarAccess.getHomeAccess().getActivitiesAssignment_2_2(), "rule__Home__ActivitiesAssignment_2_2");
					put(grammarAccess.getHomeAccess().getActivitiesAssignment_2_3_1(), "rule__Home__ActivitiesAssignment_2_3_1");
					put(grammarAccess.getRoomAccess().getNameAssignment_2(), "rule__Room__NameAssignment_2");
					put(grammarAccess.getRoomAccess().getSensorsAssignment_4_2(), "rule__Room__SensorsAssignment_4_2");
					put(grammarAccess.getRoomAccess().getSensorsAssignment_4_3_1(), "rule__Room__SensorsAssignment_4_3_1");
					put(grammarAccess.getAnalogSensorAccess().getNameAssignment_2(), "rule__AnalogSensor__NameAssignment_2");
					put(grammarAccess.getAnalogSensorAccess().getLocationAssignment_4(), "rule__AnalogSensor__LocationAssignment_4");
					put(grammarAccess.getAnalogSensorAccess().getTypeAssignment_7(), "rule__AnalogSensor__TypeAssignment_7");
					put(grammarAccess.getDigitalSensorAccess().getNameAssignment_2(), "rule__DigitalSensor__NameAssignment_2");
					put(grammarAccess.getDigitalSensorAccess().getLocationAssignment_4(), "rule__DigitalSensor__LocationAssignment_4");
					put(grammarAccess.getDigitalSensorAccess().getTypeAssignment_7(), "rule__DigitalSensor__TypeAssignment_7");
					put(grammarAccess.getSensorCSVAccess().getNameAssignment_2(), "rule__SensorCSV__NameAssignment_2");
					put(grammarAccess.getSensorCSVAccess().getFileAssignment_4(), "rule__SensorCSV__FileAssignment_4");
					put(grammarAccess.getPatternAccess().getNameAssignment_2(), "rule__Pattern__NameAssignment_2");
					put(grammarAccess.getPatternAccess().getRulesAssignment_4_2(), "rule__Pattern__RulesAssignment_4_2");
					put(grammarAccess.getPatternAccess().getRulesAssignment_4_3_1(), "rule__Pattern__RulesAssignment_4_3_1");
					put(grammarAccess.getRuleAccess().getPredicateAssignment_1(), "rule__Rule__PredicateAssignment_1");
					put(grammarAccess.getRuleAccess().getDurationAssignment_2_1(), "rule__Rule__DurationAssignment_2_1");
					put(grammarAccess.getSensorPredicateAccess().getSensorAssignment_1(), "rule__SensorPredicate__SensorAssignment_1");
					put(grammarAccess.getSensorPredicateAccess().getOperatorAssignment_2(), "rule__SensorPredicate__OperatorAssignment_2");
					put(grammarAccess.getSensorPredicateAccess().getValueAssignment_3(), "rule__SensorPredicate__ValueAssignment_3");
					put(grammarAccess.getPersonPredicateAccess().getPersonAssignment_1(), "rule__PersonPredicate__PersonAssignment_1");
					put(grammarAccess.getPersonPredicateAccess().getActivityAssignment_2(), "rule__PersonPredicate__ActivityAssignment_2");
					put(grammarAccess.getDurationAccess().getDurationAssignment_1(), "rule__Duration__DurationAssignment_1");
					put(grammarAccess.getDurationAccess().getPrecisionAssignment_2(), "rule__Duration__PrecisionAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SmartHomeGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SmartHomeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
