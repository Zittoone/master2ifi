/*
 * generated by Xtext 2.12.0
 */
package smarthome.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class HomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Home");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHomeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHomeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRoomsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRoomsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cRoomsRoomParserRuleCall_3_2_0 = (RuleCall)cRoomsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cRoomsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cRoomsRoomParserRuleCall_3_3_1_0 = (RuleCall)cRoomsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPersonsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cPersonsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cPersonsPersonParserRuleCall_4_2_0 = (RuleCall)cPersonsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cPersonsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cPersonsPersonParserRuleCall_4_3_1_0 = (RuleCall)cPersonsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPatternsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPatternsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cPatternsPatternParserRuleCall_5_2_0 = (RuleCall)cPatternsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPatternsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cPatternsPatternParserRuleCall_5_3_1_0 = (RuleCall)cPatternsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Home:
		//	{Home}
		//	'Home'
		//	'{' ('rooms' '{' rooms+=Room ("," rooms+=Room)* '}')? ('persons' '{' persons+=Person ("," persons+=Person)* '}')?
		//	('patterns' '{' patterns+=Pattern ("," patterns+=Pattern)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Home} 'Home' '{' ('rooms' '{' rooms+=Room ("," rooms+=Room)* '}')? ('persons' '{' persons+=Person (","
		//persons+=Person)* '}')? ('patterns' '{' patterns+=Pattern ("," patterns+=Pattern)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Home}
		public Action getHomeAction_0() { return cHomeAction_0; }
		
		//'Home'
		public Keyword getHomeKeyword_1() { return cHomeKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('rooms' '{' rooms+=Room ("," rooms+=Room)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'rooms'
		public Keyword getRoomsKeyword_3_0() { return cRoomsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//rooms+=Room
		public Assignment getRoomsAssignment_3_2() { return cRoomsAssignment_3_2; }
		
		//Room
		public RuleCall getRoomsRoomParserRuleCall_3_2_0() { return cRoomsRoomParserRuleCall_3_2_0; }
		
		//("," rooms+=Room)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//rooms+=Room
		public Assignment getRoomsAssignment_3_3_1() { return cRoomsAssignment_3_3_1; }
		
		//Room
		public RuleCall getRoomsRoomParserRuleCall_3_3_1_0() { return cRoomsRoomParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('persons' '{' persons+=Person ("," persons+=Person)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'persons'
		public Keyword getPersonsKeyword_4_0() { return cPersonsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//persons+=Person
		public Assignment getPersonsAssignment_4_2() { return cPersonsAssignment_4_2; }
		
		//Person
		public RuleCall getPersonsPersonParserRuleCall_4_2_0() { return cPersonsPersonParserRuleCall_4_2_0; }
		
		//("," persons+=Person)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//persons+=Person
		public Assignment getPersonsAssignment_4_3_1() { return cPersonsAssignment_4_3_1; }
		
		//Person
		public RuleCall getPersonsPersonParserRuleCall_4_3_1_0() { return cPersonsPersonParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('patterns' '{' patterns+=Pattern ("," patterns+=Pattern)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'patterns'
		public Keyword getPatternsKeyword_5_0() { return cPatternsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//patterns+=Pattern
		public Assignment getPatternsAssignment_5_2() { return cPatternsAssignment_5_2; }
		
		//Pattern
		public RuleCall getPatternsPatternParserRuleCall_5_2_0() { return cPatternsPatternParserRuleCall_5_2_0; }
		
		//("," patterns+=Pattern)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//patterns+=Pattern
		public Assignment getPatternsAssignment_5_3_1() { return cPatternsAssignment_5_3_1; }
		
		//Pattern
		public RuleCall getPatternsPatternParserRuleCall_5_3_1_0() { return cPatternsPatternParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class SensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Sensor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAnalogSensorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDigitalSensorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Sensor:
		//	AnalogSensor | DigitalSensor;
		@Override public ParserRule getRule() { return rule; }
		
		//AnalogSensor | DigitalSensor
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AnalogSensor
		public RuleCall getAnalogSensorParserRuleCall_0() { return cAnalogSensorParserRuleCall_0; }
		
		//DigitalSensor
		public RuleCall getDigitalSensorParserRuleCall_1() { return cDigitalSensorParserRuleCall_1; }
	}
	public class PredicateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Predicate");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSensorPredicateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPersonPredicateParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Predicate:
		//	SensorPredicate | PersonPredicate;
		@Override public ParserRule getRule() { return rule; }
		
		//SensorPredicate | PersonPredicate
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SensorPredicate
		public RuleCall getSensorPredicateParserRuleCall_0() { return cSensorPredicateParserRuleCall_0; }
		
		//PersonPredicate
		public RuleCall getPersonPredicateParserRuleCall_1() { return cPersonPredicateParserRuleCall_1; }
	}
	public class RoomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Room");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRoomAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRoomKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSensorsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cSensorsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cSensorsSensorParserRuleCall_4_2_0 = (RuleCall)cSensorsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cSensorsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cSensorsSensorParserRuleCall_4_3_1_0 = (RuleCall)cSensorsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Room:
		//	{Room}
		//	'Room'
		//	name=EString
		//	'{' ('sensors' '{' sensors+=Sensor ("," sensors+=Sensor)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Room} 'Room' name=EString '{' ('sensors' '{' sensors+=Sensor ("," sensors+=Sensor)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Room}
		public Action getRoomAction_0() { return cRoomAction_0; }
		
		//'Room'
		public Keyword getRoomKeyword_1() { return cRoomKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('sensors' '{' sensors+=Sensor ("," sensors+=Sensor)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'sensors'
		public Keyword getSensorsKeyword_4_0() { return cSensorsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//sensors+=Sensor
		public Assignment getSensorsAssignment_4_2() { return cSensorsAssignment_4_2; }
		
		//Sensor
		public RuleCall getSensorsSensorParserRuleCall_4_2_0() { return cSensorsSensorParserRuleCall_4_2_0; }
		
		//("," sensors+=Sensor)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//sensors+=Sensor
		public Assignment getSensorsAssignment_4_3_1() { return cSensorsAssignment_4_3_1; }
		
		//Sensor
		public RuleCall getSensorsSensorParserRuleCall_4_3_1_0() { return cSensorsSensorParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PersonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Person");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPersonAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPersonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Person:
		//	{Person}
		//	'Person'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Person} 'Person' name=EString
		public Group getGroup() { return cGroup; }
		
		//{Person}
		public Action getPersonAction_0() { return cPersonAction_0; }
		
		//'Person'
		public Keyword getPersonKeyword_1() { return cPersonKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class PatternElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Pattern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPatternAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPatternKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRulesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRulesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cRulesRuleCrossReference_4_2_0 = (CrossReference)cRulesAssignment_4_2.eContents().get(0);
		private final RuleCall cRulesRuleEStringParserRuleCall_4_2_0_1 = (RuleCall)cRulesRuleCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cRulesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cRulesRuleCrossReference_4_3_1_0 = (CrossReference)cRulesAssignment_4_3_1.eContents().get(0);
		private final RuleCall cRulesRuleEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cRulesRuleCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Pattern:
		//	{Pattern}
		//	'Pattern'
		//	name=EString
		//	'{' ('rules' '(' rules+=[Rule|EString] ("," rules+=[Rule|EString])* ')')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Pattern} 'Pattern' name=EString '{' ('rules' '(' rules+=[Rule|EString] ("," rules+=[Rule|EString])* ')')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Pattern}
		public Action getPatternAction_0() { return cPatternAction_0; }
		
		//'Pattern'
		public Keyword getPatternKeyword_1() { return cPatternKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('rules' '(' rules+=[Rule|EString] ("," rules+=[Rule|EString])* ')')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'rules'
		public Keyword getRulesKeyword_4_0() { return cRulesKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//rules+=[Rule|EString]
		public Assignment getRulesAssignment_4_2() { return cRulesAssignment_4_2; }
		
		//[Rule|EString]
		public CrossReference getRulesRuleCrossReference_4_2_0() { return cRulesRuleCrossReference_4_2_0; }
		
		//EString
		public RuleCall getRulesRuleEStringParserRuleCall_4_2_0_1() { return cRulesRuleEStringParserRuleCall_4_2_0_1; }
		
		//("," rules+=[Rule|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//rules+=[Rule|EString]
		public Assignment getRulesAssignment_4_3_1() { return cRulesAssignment_4_3_1; }
		
		//[Rule|EString]
		public CrossReference getRulesRuleCrossReference_4_3_1_0() { return cRulesRuleCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getRulesRuleEStringParserRuleCall_4_3_1_0_1() { return cRulesRuleEStringParserRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Value");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEDoubleParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Value:
		//	{Value}
		//	'Value'
		//	'{' ('value' value=EDouble)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Value} 'Value' '{' ('value' value=EDouble)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Value}
		public Action getValueAction_0() { return cValueAction_0; }
		
		//'Value'
		public Keyword getValueKeyword_1() { return cValueKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('value' value=EDouble)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//value=EDouble
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EDouble
		public RuleCall getValueEDoubleParserRuleCall_3_1_0() { return cValueEDoubleParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class AnalogSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.AnalogSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnalogSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAnalogSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_4_1_0 = (RuleCall)cValueAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AnalogSensor:
		//	{AnalogSensor}
		//	'AnalogSensor'
		//	name=EString
		//	'{' ('value' value=Value)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{AnalogSensor} 'AnalogSensor' name=EString '{' ('value' value=Value)? '}'
		public Group getGroup() { return cGroup; }
		
		//{AnalogSensor}
		public Action getAnalogSensorAction_0() { return cAnalogSensorAction_0; }
		
		//'AnalogSensor'
		public Keyword getAnalogSensorKeyword_1() { return cAnalogSensorKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('value' value=Value)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'value'
		public Keyword getValueKeyword_4_0() { return cValueKeyword_4_0; }
		
		//value=Value
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_4_1_0() { return cValueValueParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DigitalSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.DigitalSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDigitalSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDigitalSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_4_1_0 = (RuleCall)cValueAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DigitalSensor:
		//	{DigitalSensor}
		//	'DigitalSensor'
		//	name=EString
		//	'{' ('value' value=Value)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DigitalSensor} 'DigitalSensor' name=EString '{' ('value' value=Value)? '}'
		public Group getGroup() { return cGroup; }
		
		//{DigitalSensor}
		public Action getDigitalSensorAction_0() { return cDigitalSensorAction_0; }
		
		//'DigitalSensor'
		public Keyword getDigitalSensorKeyword_1() { return cDigitalSensorKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('value' value=Value)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'value'
		public Keyword getValueKeyword_4_0() { return cValueKeyword_4_0; }
		
		//value=Value
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_4_1_0() { return cValueValueParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble ecore::EDouble:
		//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E' | 'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E' | 'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'E' | 'e'
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Rule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRuleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPredicatesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cPredicatesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cPredicatesPredicateCrossReference_3_2_0 = (CrossReference)cPredicatesAssignment_3_2.eContents().get(0);
		private final RuleCall cPredicatesPredicateEStringParserRuleCall_3_2_0_1 = (RuleCall)cPredicatesPredicateCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cPredicatesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cPredicatesPredicateCrossReference_3_3_1_0 = (CrossReference)cPredicatesAssignment_3_3_1.eContents().get(0);
		private final RuleCall cPredicatesPredicateEStringParserRuleCall_3_3_1_0_1 = (RuleCall)cPredicatesPredicateCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDurationKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDurationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDurationDurationParserRuleCall_4_1_0 = (RuleCall)cDurationAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Rule:
		//	{Rule}
		//	'Rule'
		//	'{' ('predicates' '(' predicates+=[Predicate|EString] ("," predicates+=[Predicate|EString])* ')')? ('duration'
		//	duration=Duration)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Rule} 'Rule' '{' ('predicates' '(' predicates+=[Predicate|EString] ("," predicates+=[Predicate|EString])* ')')?
		//('duration' duration=Duration)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Rule}
		public Action getRuleAction_0() { return cRuleAction_0; }
		
		//'Rule'
		public Keyword getRuleKeyword_1() { return cRuleKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('predicates' '(' predicates+=[Predicate|EString] ("," predicates+=[Predicate|EString])* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'predicates'
		public Keyword getPredicatesKeyword_3_0() { return cPredicatesKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//predicates+=[Predicate|EString]
		public Assignment getPredicatesAssignment_3_2() { return cPredicatesAssignment_3_2; }
		
		//[Predicate|EString]
		public CrossReference getPredicatesPredicateCrossReference_3_2_0() { return cPredicatesPredicateCrossReference_3_2_0; }
		
		//EString
		public RuleCall getPredicatesPredicateEStringParserRuleCall_3_2_0_1() { return cPredicatesPredicateEStringParserRuleCall_3_2_0_1; }
		
		//("," predicates+=[Predicate|EString])*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//predicates+=[Predicate|EString]
		public Assignment getPredicatesAssignment_3_3_1() { return cPredicatesAssignment_3_3_1; }
		
		//[Predicate|EString]
		public CrossReference getPredicatesPredicateCrossReference_3_3_1_0() { return cPredicatesPredicateCrossReference_3_3_1_0; }
		
		//EString
		public RuleCall getPredicatesPredicateEStringParserRuleCall_3_3_1_0_1() { return cPredicatesPredicateEStringParserRuleCall_3_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
		
		//('duration' duration=Duration)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'duration'
		public Keyword getDurationKeyword_4_0() { return cDurationKeyword_4_0; }
		
		//duration=Duration
		public Assignment getDurationAssignment_4_1() { return cDurationAssignment_4_1; }
		
		//Duration
		public RuleCall getDurationDurationParserRuleCall_4_1_0() { return cDurationDurationParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Duration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDurationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTimeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTimeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTimeEIntParserRuleCall_3_1_0 = (RuleCall)cTimeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPrecisionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPrecisionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPrecisionPrecisionEnumRuleCall_4_1_0 = (RuleCall)cPrecisionAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Duration:
		//	{Duration}
		//	'Duration'
		//	'{' ('time' time=EInt)? ('precision' precision=Precision)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Duration} 'Duration' '{' ('time' time=EInt)? ('precision' precision=Precision)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Duration}
		public Action getDurationAction_0() { return cDurationAction_0; }
		
		//'Duration'
		public Keyword getDurationKeyword_1() { return cDurationKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('time' time=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'time'
		public Keyword getTimeKeyword_3_0() { return cTimeKeyword_3_0; }
		
		//time=EInt
		public Assignment getTimeAssignment_3_1() { return cTimeAssignment_3_1; }
		
		//EInt
		public RuleCall getTimeEIntParserRuleCall_3_1_0() { return cTimeEIntParserRuleCall_3_1_0; }
		
		//('precision' precision=Precision)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'precision'
		public Keyword getPrecisionKeyword_4_0() { return cPrecisionKeyword_4_0; }
		
		//precision=Precision
		public Assignment getPrecisionAssignment_4_1() { return cPrecisionAssignment_4_1; }
		
		//Precision
		public RuleCall getPrecisionPrecisionEnumRuleCall_4_1_0() { return cPrecisionPrecisionEnumRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SensorPredicateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.SensorPredicate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSensorPredicateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSensorPredicateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOperatorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOperatorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_3_1_0 = (RuleCall)cOperatorAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSensorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSensorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSensorSensorCrossReference_4_1_0 = (CrossReference)cSensorAssignment_4_1.eContents().get(0);
		private final RuleCall cSensorSensorEStringParserRuleCall_4_1_0_1 = (RuleCall)cSensorSensorCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cValueKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cValueAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_5_1_0 = (RuleCall)cValueAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SensorPredicate:
		//	{SensorPredicate}
		//	'SensorPredicate'
		//	'{' ('operator' operator=Operator)? ('sensor' sensor=[Sensor|EString])? ('value' value=Value)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SensorPredicate} 'SensorPredicate' '{' ('operator' operator=Operator)? ('sensor' sensor=[Sensor|EString])? ('value'
		//value=Value)? '}'
		public Group getGroup() { return cGroup; }
		
		//{SensorPredicate}
		public Action getSensorPredicateAction_0() { return cSensorPredicateAction_0; }
		
		//'SensorPredicate'
		public Keyword getSensorPredicateKeyword_1() { return cSensorPredicateKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('operator' operator=Operator)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'operator'
		public Keyword getOperatorKeyword_3_0() { return cOperatorKeyword_3_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_3_1() { return cOperatorAssignment_3_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_3_1_0() { return cOperatorOperatorEnumRuleCall_3_1_0; }
		
		//('sensor' sensor=[Sensor|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'sensor'
		public Keyword getSensorKeyword_4_0() { return cSensorKeyword_4_0; }
		
		//sensor=[Sensor|EString]
		public Assignment getSensorAssignment_4_1() { return cSensorAssignment_4_1; }
		
		//[Sensor|EString]
		public CrossReference getSensorSensorCrossReference_4_1_0() { return cSensorSensorCrossReference_4_1_0; }
		
		//EString
		public RuleCall getSensorSensorEStringParserRuleCall_4_1_0_1() { return cSensorSensorEStringParserRuleCall_4_1_0_1; }
		
		//('value' value=Value)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'value'
		public Keyword getValueKeyword_5_0() { return cValueKeyword_5_0; }
		
		//value=Value
		public Assignment getValueAssignment_5_1() { return cValueAssignment_5_1; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_5_1_0() { return cValueValueParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class PersonPredicateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.PersonPredicate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPersonPredicateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPersonPredicateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cActivityKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActivityAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cActivityActivityEnumRuleCall_3_1_0 = (RuleCall)cActivityAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPersonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPersonAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cPersonPersonCrossReference_4_1_0 = (CrossReference)cPersonAssignment_4_1.eContents().get(0);
		private final RuleCall cPersonPersonEStringParserRuleCall_4_1_0_1 = (RuleCall)cPersonPersonCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PersonPredicate:
		//	{PersonPredicate}
		//	'PersonPredicate'
		//	'{' ('activity' activity=Activity)? ('person' person=[Person|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{PersonPredicate} 'PersonPredicate' '{' ('activity' activity=Activity)? ('person' person=[Person|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{PersonPredicate}
		public Action getPersonPredicateAction_0() { return cPersonPredicateAction_0; }
		
		//'PersonPredicate'
		public Keyword getPersonPredicateKeyword_1() { return cPersonPredicateKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('activity' activity=Activity)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'activity'
		public Keyword getActivityKeyword_3_0() { return cActivityKeyword_3_0; }
		
		//activity=Activity
		public Assignment getActivityAssignment_3_1() { return cActivityAssignment_3_1; }
		
		//Activity
		public RuleCall getActivityActivityEnumRuleCall_3_1_0() { return cActivityActivityEnumRuleCall_3_1_0; }
		
		//('person' person=[Person|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'person'
		public Keyword getPersonKeyword_4_0() { return cPersonKeyword_4_0; }
		
		//person=[Person|EString]
		public Assignment getPersonAssignment_4_1() { return cPersonAssignment_4_1; }
		
		//[Person|EString]
		public CrossReference getPersonPersonCrossReference_4_1_0() { return cPersonPersonCrossReference_4_1_0; }
		
		//EString
		public RuleCall getPersonPersonEStringParserRuleCall_4_1_0_1() { return cPersonPersonEStringParserRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	public class OperatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSuperiorEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSuperiorSuperiorKeyword_0_0 = (Keyword)cSuperiorEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cInferiorEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cInferiorInferiorKeyword_1_0 = (Keyword)cInferiorEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEqualEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEqualEqualKeyword_2_0 = (Keyword)cEqualEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Operator:
		//	superior | inferior | equal;
		public EnumRule getRule() { return rule; }
		
		//superior | inferior | equal
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//superior
		public EnumLiteralDeclaration getSuperiorEnumLiteralDeclaration_0() { return cSuperiorEnumLiteralDeclaration_0; }
		
		//'superior'
		public Keyword getSuperiorSuperiorKeyword_0_0() { return cSuperiorSuperiorKeyword_0_0; }
		
		//inferior
		public EnumLiteralDeclaration getInferiorEnumLiteralDeclaration_1() { return cInferiorEnumLiteralDeclaration_1; }
		
		//'inferior'
		public Keyword getInferiorInferiorKeyword_1_0() { return cInferiorInferiorKeyword_1_0; }
		
		//equal
		public EnumLiteralDeclaration getEqualEnumLiteralDeclaration_2() { return cEqualEnumLiteralDeclaration_2; }
		
		//'equal'
		public Keyword getEqualEqualKeyword_2_0() { return cEqualEqualKeyword_2_0; }
	}
	public class ActivityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Activity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStandingEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStandingStandingKeyword_0_0 = (Keyword)cStandingEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLayingEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLayingLayingKeyword_1_0 = (Keyword)cLayingEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSittingEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSittingSittingKeyword_2_0 = (Keyword)cSittingEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Activity:
		//	standing | laying | sitting;
		public EnumRule getRule() { return rule; }
		
		//standing | laying | sitting
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//standing
		public EnumLiteralDeclaration getStandingEnumLiteralDeclaration_0() { return cStandingEnumLiteralDeclaration_0; }
		
		//'standing'
		public Keyword getStandingStandingKeyword_0_0() { return cStandingStandingKeyword_0_0; }
		
		//laying
		public EnumLiteralDeclaration getLayingEnumLiteralDeclaration_1() { return cLayingEnumLiteralDeclaration_1; }
		
		//'laying'
		public Keyword getLayingLayingKeyword_1_0() { return cLayingLayingKeyword_1_0; }
		
		//sitting
		public EnumLiteralDeclaration getSittingEnumLiteralDeclaration_2() { return cSittingEnumLiteralDeclaration_2; }
		
		//'sitting'
		public Keyword getSittingSittingKeyword_2_0() { return cSittingSittingKeyword_2_0; }
	}
	public class PrecisionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "smarthome.dsl.Dsl.Precision");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMsEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMsMsKeyword_0_0 = (Keyword)cMsEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSSKeyword_1_0 = (Keyword)cSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMMKeyword_2_0 = (Keyword)cMEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Precision:
		//	ms | s | m;
		public EnumRule getRule() { return rule; }
		
		//ms | s | m
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ms
		public EnumLiteralDeclaration getMsEnumLiteralDeclaration_0() { return cMsEnumLiteralDeclaration_0; }
		
		//'ms'
		public Keyword getMsMsKeyword_0_0() { return cMsMsKeyword_0_0; }
		
		//s
		public EnumLiteralDeclaration getSEnumLiteralDeclaration_1() { return cSEnumLiteralDeclaration_1; }
		
		//'s'
		public Keyword getSSKeyword_1_0() { return cSSKeyword_1_0; }
		
		//m
		public EnumLiteralDeclaration getMEnumLiteralDeclaration_2() { return cMEnumLiteralDeclaration_2; }
		
		//'m'
		public Keyword getMMKeyword_2_0() { return cMMKeyword_2_0; }
	}
	
	private final HomeElements pHome;
	private final SensorElements pSensor;
	private final PredicateElements pPredicate;
	private final RoomElements pRoom;
	private final PersonElements pPerson;
	private final PatternElements pPattern;
	private final EStringElements pEString;
	private final ValueElements pValue;
	private final AnalogSensorElements pAnalogSensor;
	private final DigitalSensorElements pDigitalSensor;
	private final EDoubleElements pEDouble;
	private final RuleElements pRule;
	private final DurationElements pDuration;
	private final SensorPredicateElements pSensorPredicate;
	private final PersonPredicateElements pPersonPredicate;
	private final OperatorElements eOperator;
	private final ActivityElements eActivity;
	private final EIntElements pEInt;
	private final PrecisionElements ePrecision;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pHome = new HomeElements();
		this.pSensor = new SensorElements();
		this.pPredicate = new PredicateElements();
		this.pRoom = new RoomElements();
		this.pPerson = new PersonElements();
		this.pPattern = new PatternElements();
		this.pEString = new EStringElements();
		this.pValue = new ValueElements();
		this.pAnalogSensor = new AnalogSensorElements();
		this.pDigitalSensor = new DigitalSensorElements();
		this.pEDouble = new EDoubleElements();
		this.pRule = new RuleElements();
		this.pDuration = new DurationElements();
		this.pSensorPredicate = new SensorPredicateElements();
		this.pPersonPredicate = new PersonPredicateElements();
		this.eOperator = new OperatorElements();
		this.eActivity = new ActivityElements();
		this.pEInt = new EIntElements();
		this.ePrecision = new PrecisionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("smarthome.dsl.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Home:
	//	{Home}
	//	'Home'
	//	'{' ('rooms' '{' rooms+=Room ("," rooms+=Room)* '}')? ('persons' '{' persons+=Person ("," persons+=Person)* '}')?
	//	('patterns' '{' patterns+=Pattern ("," patterns+=Pattern)* '}')?
	//	'}';
	public HomeElements getHomeAccess() {
		return pHome;
	}
	
	public ParserRule getHomeRule() {
		return getHomeAccess().getRule();
	}
	
	//Sensor:
	//	AnalogSensor | DigitalSensor;
	public SensorElements getSensorAccess() {
		return pSensor;
	}
	
	public ParserRule getSensorRule() {
		return getSensorAccess().getRule();
	}
	
	//Predicate:
	//	SensorPredicate | PersonPredicate;
	public PredicateElements getPredicateAccess() {
		return pPredicate;
	}
	
	public ParserRule getPredicateRule() {
		return getPredicateAccess().getRule();
	}
	
	//Room:
	//	{Room}
	//	'Room'
	//	name=EString
	//	'{' ('sensors' '{' sensors+=Sensor ("," sensors+=Sensor)* '}')?
	//	'}';
	public RoomElements getRoomAccess() {
		return pRoom;
	}
	
	public ParserRule getRoomRule() {
		return getRoomAccess().getRule();
	}
	
	//Person:
	//	{Person}
	//	'Person'
	//	name=EString;
	public PersonElements getPersonAccess() {
		return pPerson;
	}
	
	public ParserRule getPersonRule() {
		return getPersonAccess().getRule();
	}
	
	//Pattern:
	//	{Pattern}
	//	'Pattern'
	//	name=EString
	//	'{' ('rules' '(' rules+=[Rule|EString] ("," rules+=[Rule|EString])* ')')?
	//	'}';
	public PatternElements getPatternAccess() {
		return pPattern;
	}
	
	public ParserRule getPatternRule() {
		return getPatternAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Value:
	//	{Value}
	//	'Value'
	//	'{' ('value' value=EDouble)?
	//	'}';
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	//AnalogSensor:
	//	{AnalogSensor}
	//	'AnalogSensor'
	//	name=EString
	//	'{' ('value' value=Value)?
	//	'}';
	public AnalogSensorElements getAnalogSensorAccess() {
		return pAnalogSensor;
	}
	
	public ParserRule getAnalogSensorRule() {
		return getAnalogSensorAccess().getRule();
	}
	
	//DigitalSensor:
	//	{DigitalSensor}
	//	'DigitalSensor'
	//	name=EString
	//	'{' ('value' value=Value)?
	//	'}';
	public DigitalSensorElements getDigitalSensorAccess() {
		return pDigitalSensor;
	}
	
	public ParserRule getDigitalSensorRule() {
		return getDigitalSensorAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//Rule:
	//	{Rule}
	//	'Rule'
	//	'{' ('predicates' '(' predicates+=[Predicate|EString] ("," predicates+=[Predicate|EString])* ')')? ('duration'
	//	duration=Duration)?
	//	'}';
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	//Duration:
	//	{Duration}
	//	'Duration'
	//	'{' ('time' time=EInt)? ('precision' precision=Precision)?
	//	'}';
	public DurationElements getDurationAccess() {
		return pDuration;
	}
	
	public ParserRule getDurationRule() {
		return getDurationAccess().getRule();
	}
	
	//SensorPredicate:
	//	{SensorPredicate}
	//	'SensorPredicate'
	//	'{' ('operator' operator=Operator)? ('sensor' sensor=[Sensor|EString])? ('value' value=Value)?
	//	'}';
	public SensorPredicateElements getSensorPredicateAccess() {
		return pSensorPredicate;
	}
	
	public ParserRule getSensorPredicateRule() {
		return getSensorPredicateAccess().getRule();
	}
	
	//PersonPredicate:
	//	{PersonPredicate}
	//	'PersonPredicate'
	//	'{' ('activity' activity=Activity)? ('person' person=[Person|EString])?
	//	'}';
	public PersonPredicateElements getPersonPredicateAccess() {
		return pPersonPredicate;
	}
	
	public ParserRule getPersonPredicateRule() {
		return getPersonPredicateAccess().getRule();
	}
	
	//enum Operator:
	//	superior | inferior | equal;
	public OperatorElements getOperatorAccess() {
		return eOperator;
	}
	
	public EnumRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}
	
	//enum Activity:
	//	standing | laying | sitting;
	public ActivityElements getActivityAccess() {
		return eActivity;
	}
	
	public EnumRule getActivityRule() {
		return getActivityAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//enum Precision:
	//	ms | s | m;
	public PrecisionElements getPrecisionAccess() {
		return ePrecision;
	}
	
	public EnumRule getPrecisionRule() {
		return getPrecisionAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
