/*
 * generated by Xtext 2.12.0
 */
package smarthome.dsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import smarthome.dsl.ide.contentassist.antlr.internal.InternalDslParser;
import smarthome.dsl.services.DslGrammarAccess;

public class DslParser extends AbstractContentAssistParser {

	@Inject
	private DslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalDslParser createParser() {
		InternalDslParser result = new InternalDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSensorAccess().getAlternatives(), "rule__Sensor__Alternatives");
					put(grammarAccess.getPredicateAccess().getAlternatives(), "rule__Predicate__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEDoubleAccess().getAlternatives_4_0(), "rule__EDouble__Alternatives_4_0");
					put(grammarAccess.getOperatorAccess().getAlternatives(), "rule__Operator__Alternatives");
					put(grammarAccess.getActivityAccess().getAlternatives(), "rule__Activity__Alternatives");
					put(grammarAccess.getPrecisionAccess().getAlternatives(), "rule__Precision__Alternatives");
					put(grammarAccess.getHomeAccess().getGroup(), "rule__Home__Group__0");
					put(grammarAccess.getHomeAccess().getGroup_3(), "rule__Home__Group_3__0");
					put(grammarAccess.getHomeAccess().getGroup_3_3(), "rule__Home__Group_3_3__0");
					put(grammarAccess.getHomeAccess().getGroup_4(), "rule__Home__Group_4__0");
					put(grammarAccess.getHomeAccess().getGroup_4_3(), "rule__Home__Group_4_3__0");
					put(grammarAccess.getHomeAccess().getGroup_5(), "rule__Home__Group_5__0");
					put(grammarAccess.getHomeAccess().getGroup_5_3(), "rule__Home__Group_5_3__0");
					put(grammarAccess.getRoomAccess().getGroup(), "rule__Room__Group__0");
					put(grammarAccess.getRoomAccess().getGroup_4(), "rule__Room__Group_4__0");
					put(grammarAccess.getRoomAccess().getGroup_4_3(), "rule__Room__Group_4_3__0");
					put(grammarAccess.getPersonAccess().getGroup(), "rule__Person__Group__0");
					put(grammarAccess.getPatternAccess().getGroup(), "rule__Pattern__Group__0");
					put(grammarAccess.getPatternAccess().getGroup_4(), "rule__Pattern__Group_4__0");
					put(grammarAccess.getPatternAccess().getGroup_4_3(), "rule__Pattern__Group_4_3__0");
					put(grammarAccess.getAnalogSensorAccess().getGroup(), "rule__AnalogSensor__Group__0");
					put(grammarAccess.getDigitalSensorAccess().getGroup(), "rule__DigitalSensor__Group__0");
					put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
					put(grammarAccess.getEDoubleAccess().getGroup_4(), "rule__EDouble__Group_4__0");
					put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
					put(grammarAccess.getRuleAccess().getGroup_3(), "rule__Rule__Group_3__0");
					put(grammarAccess.getRuleAccess().getGroup_3_3(), "rule__Rule__Group_3_3__0");
					put(grammarAccess.getRuleAccess().getGroup_4(), "rule__Rule__Group_4__0");
					put(grammarAccess.getDurationAccess().getGroup(), "rule__Duration__Group__0");
					put(grammarAccess.getDurationAccess().getGroup_3(), "rule__Duration__Group_3__0");
					put(grammarAccess.getDurationAccess().getGroup_4(), "rule__Duration__Group_4__0");
					put(grammarAccess.getSensorPredicateAccess().getGroup(), "rule__SensorPredicate__Group__0");
					put(grammarAccess.getSensorPredicateAccess().getGroup_3(), "rule__SensorPredicate__Group_3__0");
					put(grammarAccess.getSensorPredicateAccess().getGroup_4(), "rule__SensorPredicate__Group_4__0");
					put(grammarAccess.getSensorPredicateAccess().getGroup_5(), "rule__SensorPredicate__Group_5__0");
					put(grammarAccess.getPersonPredicateAccess().getGroup(), "rule__PersonPredicate__Group__0");
					put(grammarAccess.getPersonPredicateAccess().getGroup_3(), "rule__PersonPredicate__Group_3__0");
					put(grammarAccess.getPersonPredicateAccess().getGroup_4(), "rule__PersonPredicate__Group_4__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getHomeAccess().getRoomsAssignment_3_2(), "rule__Home__RoomsAssignment_3_2");
					put(grammarAccess.getHomeAccess().getRoomsAssignment_3_3_1(), "rule__Home__RoomsAssignment_3_3_1");
					put(grammarAccess.getHomeAccess().getPersonsAssignment_4_2(), "rule__Home__PersonsAssignment_4_2");
					put(grammarAccess.getHomeAccess().getPersonsAssignment_4_3_1(), "rule__Home__PersonsAssignment_4_3_1");
					put(grammarAccess.getHomeAccess().getPatternsAssignment_5_2(), "rule__Home__PatternsAssignment_5_2");
					put(grammarAccess.getHomeAccess().getPatternsAssignment_5_3_1(), "rule__Home__PatternsAssignment_5_3_1");
					put(grammarAccess.getRoomAccess().getNameAssignment_2(), "rule__Room__NameAssignment_2");
					put(grammarAccess.getRoomAccess().getSensorsAssignment_4_2(), "rule__Room__SensorsAssignment_4_2");
					put(grammarAccess.getRoomAccess().getSensorsAssignment_4_3_1(), "rule__Room__SensorsAssignment_4_3_1");
					put(grammarAccess.getPersonAccess().getNameAssignment_2(), "rule__Person__NameAssignment_2");
					put(grammarAccess.getPatternAccess().getNameAssignment_2(), "rule__Pattern__NameAssignment_2");
					put(grammarAccess.getPatternAccess().getRulesAssignment_4_2(), "rule__Pattern__RulesAssignment_4_2");
					put(grammarAccess.getPatternAccess().getRulesAssignment_4_3_1(), "rule__Pattern__RulesAssignment_4_3_1");
					put(grammarAccess.getAnalogSensorAccess().getNameAssignment_2(), "rule__AnalogSensor__NameAssignment_2");
					put(grammarAccess.getDigitalSensorAccess().getNameAssignment_2(), "rule__DigitalSensor__NameAssignment_2");
					put(grammarAccess.getRuleAccess().getPredicatesAssignment_3_2(), "rule__Rule__PredicatesAssignment_3_2");
					put(grammarAccess.getRuleAccess().getPredicatesAssignment_3_3_1(), "rule__Rule__PredicatesAssignment_3_3_1");
					put(grammarAccess.getRuleAccess().getDurationAssignment_4_1(), "rule__Rule__DurationAssignment_4_1");
					put(grammarAccess.getDurationAccess().getTimeAssignment_3_1(), "rule__Duration__TimeAssignment_3_1");
					put(grammarAccess.getDurationAccess().getPrecisionAssignment_4_1(), "rule__Duration__PrecisionAssignment_4_1");
					put(grammarAccess.getSensorPredicateAccess().getOperatorAssignment_3_1(), "rule__SensorPredicate__OperatorAssignment_3_1");
					put(grammarAccess.getSensorPredicateAccess().getSensorAssignment_4_1(), "rule__SensorPredicate__SensorAssignment_4_1");
					put(grammarAccess.getSensorPredicateAccess().getValueAssignment_5_1(), "rule__SensorPredicate__ValueAssignment_5_1");
					put(grammarAccess.getPersonPredicateAccess().getActivityAssignment_3_1(), "rule__PersonPredicate__ActivityAssignment_3_1");
					put(grammarAccess.getPersonPredicateAccess().getPersonAssignment_4_1(), "rule__PersonPredicate__PersonAssignment_4_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
